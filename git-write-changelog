#!/bin/sh

#
# Copyright (c) 2016 Nicole Cordes, v1.0.1
#
# This script writes (appends) a changelog file according to the repository information
#
#   git write-changelog [-f | --file] [--dry-run] [<revision range>]
#
#   -f | --file
#   Defines the file name for the changelog file. Default: ChangeLog
#
#   --dry-run
#   Displays the changelog only, the changelog file is not written.
#
#   <revision range>
#   Use only commits in the defined revision range. If not given the list is caught automatically.
#   It is either the commits between last tag and HEAD or master branch and HEAD.
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.

WRITE=true
FILE="ChangeLog"
REFLIST=

while [ "$1" != "" ]; do
    case $1 in
        -w)
            echo "You are using the deprecated -w option. Changelog is now written by default. You can use --dry-run to prevent writing."
            ;;
        -f|--file)
            shift
            FILE="$1"
            ;;
        --dry-run)
            WRITE=false
            ;;
        *)
            REFLIST="$1"
            ;;
    esac
    shift
done

GIT_MAIN_BRANCH=main
if git branch --all | grep master > /dev/null; then
   GIT_MAIN_BRANCH=master
fi

if `git branch --no-color | grep -q '^\*'`; then
    OUTPUT=""
    HEAD=""
    BRANCH=`git branch --no-color | grep '^\*' | grep -v 'no branch' | sed 's/^* //g' | sed 's/.*\///g' | grep '^[0-9][0-9.]'`
    if [ "$BRANCH" == "" ]; then
        TAGS=`git tag -l`
        if [ "$TAGS" == "" ]; then
            BRANCH="0.1.0"
        else
            COMMIT=`git rev-list --tags --max-count=1`
            BRANCH=`git describe --tags $COMMIT`
            if [ "$REFLIST" == "" ]; then
                REFLIST="$COMMIT..HEAD"
            fi
        fi
    fi
    if [ "$BRANCH" != "" ]; then
        DATE=`date +%Y-%m-%d`
        DIR=${PWD##*/}
        USER=`git config --get user.name`
        HEAD="$DATE         [RELEASE] Release of $DIR $BRANCH ($USER)"$'\n'
        if [ "$REFLIST" == "" ]; then
            REFLIST="$GIT_MAIN_BRANCH..HEAD"
        fi
    fi

    LOG=`git log --pretty=format:"%ad %h %s (%an)" --date=short --no-merges $REFLIST`
    if [ "$LOG" != "" ]; then
        OUTPUT=$HEAD$LOG;
    fi

    if [ -f $FILE ]; then
        OUTPUT=$OUTPUT$'\n'$'\n'"`cat $FILE`"
    fi

    if $WRITE; then
        echo "$OUTPUT" > $FILE

        OUTPUT=$OUTPUT$'\n'$'\n'"File \"$FILE\" was written."
    fi

    echo "$OUTPUT"

fi
